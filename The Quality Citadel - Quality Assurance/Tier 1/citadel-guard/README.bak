# Project: Citadel Guard

> A Tier 1 project in "The Quality Citadel" series. This project introduces automated UI testing using Python's Robot Framework to verify the login functionality of the Sauce Demo e-commerce website.

## Project Overview

This project builds upon the manual test cases designed in "Project: Citadel Blueprint" by automating them. It demonstrates the ability to set up a test automation environment, write readable and maintainable test scripts using a keyword-driven approach, and generate professional test execution reports.

The test suite covers both positive and negative scenarios for the login feature, showcasing how to handle and verify expected application errors.

## Features Automated
- **TC-LOG-001:** Successful login with standard user credentials.
- **TC-LOG-002:** Failed login with a locked-out user.
- **TC-LOG-003:** Failed login with an incorrect password.
- **TC-LOG-004:** Failed login with an invalid username.
- **TC-LOG-005:** Failed login with an empty username.
- **TC-LOG-006:** Failed login with an empty password.
- **TC-LOG-007:** Failed login with empty credentials.

## Technologies & Tools Used
- **Automation Framework:** Robot Framework
- **Browser Automation:** SeleniumLibrary
- **Language:** Python
- **IDE:** PyCharm

## Setup and Installation

1. **Clone the repository:**
   ```bash
   git clone <this-repo-url>
   cd citadel-guard
   ```
2. **Create and activate a virtual environment:**
   ```bash
   python -m venv venv
   source venv/bin/activate 
   # On Windows use `.\venv\Scripts\activate`
   ```
3. **Install the required dependencies:**
   ```bash
   pip install -r requirements.txt
   ```

## Usage
To run the full test suite, execute the following command from the root of the project directory:
```bash
robot login_tests.robot
```

## Viewing the Report
After the test run is complete, the detailed results can be found in the `output` folder. Open the **`report.html`** file in a web browser to view a summary of the test results.